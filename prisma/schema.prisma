// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String
  password   String
  isDeleted  Boolean   @default(false)
  superAdmin Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
}

model Region {
  code         String      @id
  name         String
  flag         String
  currencyCode String? // Código de moneda para la región
  taxRate      Float? // Tasa de impuesto específica por región
  Product      Product[]
  Order        Order[]
  Category     Category[]
  Promotion    Promotion[]
  Section      Section[]
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  ProductCategory ProductCategory[]
  isDeleted       Boolean           @default(false)
  backgroundUrl   String?
  regionId        String?
  region          Region?           @relation(fields: [regionId], references: [code])
}

model Product {
  id               Int                @id @default(autoincrement())
  name             String
  description      String
  slug             String?            @unique @db.VarChar(255)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  active           Boolean            @default(false)
  searchWords      String?
  ProductCategory  ProductCategory[]
  ProductImage     ProductImage[]
  ProductVariant   ProductVariant[]
  regionId         String?
  region           Region?            @relation(fields: [regionId], references: [code])
  HighlightProduct HighlightProduct[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  url       String
  product   Product @relation(fields: [productId], references: [id])
}

model ProductCategory {
  id         Int      @id @default(autoincrement())
  productId  Int
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}

model ProductVariant {
  id            Int     @id @default(autoincrement())
  productId     Int
  size          String
  product       Product @relation(fields: [productId], references: [id])
  price         Float
  stock         Int
  discount      Float   @default(0)
  discountPrice Float?
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String
  createdAt DateTime @default(now())
  Order     Order[]
}

model Promotion {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  name        String
  description String
  discount    Float
  startDate   DateTime
  endDate     DateTime
  active      Boolean  @default(false)
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  Order       Order[]
  regionId    String?
  region      Region?  @relation(fields: [regionId], references: [code])
}

model Order {
  id             Int         @id @default(autoincrement())
  orderNumber    String?      @unique @db.VarChar(20)
  customerId     Int
  customer       Customer    @relation(fields: [customerId], references: [id])
  orderDate      DateTime    @default(now())
  totalAmount    Float
  checkoutId     String
  status         String
  shipping_line1 String
  shipping_line2 String
  city           String
  state          String
  postalCode     String
  country        String
  promotionId    Int?
  promotion      Promotion?  @relation(fields: [promotionId], references: [id])
  OrderItem      OrderItem[]
  Payment        Payment[]
  regionId       String?
  region         Region?     @relation(fields: [regionId], references: [code])
}

model OrderItem {
  id                 Int    @id @default(autoincrement())
  productName        String
  productDescription String
  productImage       String
  quantity           Int
  price              Float
  orderId            Int
  order              Order  @relation(fields: [orderId], references: [id])
}

model Payment {
  id            Int      @id @default(autoincrement())
  orderId       Int
  order         Order    @relation(fields: [orderId], references: [id])
  stripePayment Float
  paymentDate   DateTime
  amount        Float
  status        String
  paymentType   String
}

enum SectionType {
  highlight
  banner
}

model Section {
  id               Int                @id @default(autoincrement())
  type             SectionType
  title            String
  description      String
  regionId         String
  actionUrl        String
  order            Int
  backgroundUrl    String
  backgroundColor  String
  buttonText       String?
  buttonColor      String?
  Region           Region?            @relation(fields: [regionCode], references: [code])
  regionCode       String?
  HighlightProduct HighlightProduct[]
}

model HighlightProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  sectionId Int
  product   Product @relation(fields: [productId], references: [id])
  section   Section @relation(fields: [sectionId], references: [id])
}
